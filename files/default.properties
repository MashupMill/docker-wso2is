###############
# Server config
###############

Server.HostName=localhost
Server.MgtHostName=localhost
Server.EnableEmailUserName=true

Server.DeploymentSynchronizer.Enabled=false
Server.DeploymentSynchronizer.AutoCommit=false
Server.DeploymentSynchronizer.AutoCheckout=true
Server.DeploymentSynchronizer.RepositoryType=svn
Server.DeploymentSynchronizer.SvnUrl=http://svnrepo.example.com/repos/
Server.DeploymentSynchronizer.SvnUser=username
Server.DeploymentSynchronizer.SvnPassword=password
Server.DeploymentSynchronizer.SvnUrlAppendTenantId=true


##############
# Data sources
##############

DS.WSO2_CARBON_DB.url=jdbc:h2:repository/database/WSO2CARBON_DB;DB_CLOSE_ON_EXIT=FALSE
DS.WSO2_CARBON_DB.username=wso2carbon
DS.WSO2_CARBON_DB.password=wso2carbon
DS.WSO2_CARBON_DB.driverClassName=org.h2.Driver
DS.WSO2_CARBON_DB.maxActive=500
DS.WSO2_CARBON_DB.maxWait=60000
DS.WSO2_CARBON_DB.minIdle=5
DS.WSO2_CARBON_DB.testOnBorrow=true
DS.WSO2_CARBON_DB.validationQuery=SELECT 1
DS.WSO2_CARBON_DB.validationInterval=30000
DS.WSO2_CARBON_DB.defaultAutoCommit=false

DS.WSO2AM_DB.url=jdbc:h2:repository/database/WSO2CARBON_DB;DB_CLOSE_ON_EXIT=FALSE
DS.WSO2AM_DB.username=wso2carbon
DS.WSO2AM_DB.password=wso2carbon
DS.WSO2AM_DB.driverClassName=org.h2.Driver
DS.WSO2AM_DB.maxActive=500
DS.WSO2AM_DB.maxWait=60000
DS.WSO2AM_DB.minIdle=5
DS.WSO2AM_DB.testOnBorrow=true
DS.WSO2AM_DB.validationQuery=SELECT 1
DS.WSO2AM_DB.validationInterval=30000
DS.WSO2AM_DB.defaultAutoCommit=false

DS.WSO2REG_DB.url=jdbc:h2:repository/database/WSO2CARBON_DB;DB_CLOSE_ON_EXIT=FALSE
DS.WSO2REG_DB.username=wso2carbon
DS.WSO2REG_DB.password=wso2carbon
DS.WSO2REG_DB.driverClassName=org.h2.Driver
DS.WSO2REG_DB.maxActive=500
DS.WSO2REG_DB.maxWait=60000
DS.WSO2REG_DB.minIdle=5
DS.WSO2REG_DB.testOnBorrow=true
DS.WSO2REG_DB.validationQuery=SELECT 1
DS.WSO2REG_DB.validationInterval=30000
DS.WSO2REG_DB.defaultAutoCommit=false

DS.WSO2UM_DB.url=jdbc:h2:repository/database/WSO2CARBON_DB;DB_CLOSE_ON_EXIT=FALSE
DS.WSO2UM_DB.username=wso2carbon
DS.WSO2UM_DB.password=wso2carbon
DS.WSO2UM_DB.driverClassName=org.h2.Driver
DS.WSO2UM_DB.maxActive=500
DS.WSO2UM_DB.maxWait=60000
DS.WSO2UM_DB.minIdle=5
DS.WSO2UM_DB.testOnBorrow=true
DS.WSO2UM_DB.validationQuery=SELECT 1
DS.WSO2UM_DB.validationInterval=30000
DS.WSO2UM_DB.defaultAutoCommit=false


##############
# User Manager
##############

UserManager.Real.Configuration.AddAdmin=true
UserManager.Real.Configuration.AdminRole=admin
UserManager.Real.Configuration.EveryOneRoleName=everyone
UserManager.Real.Configuration.AdminUser.UserName=admin@wso2.com
UserManager.Real.Configuration.AdminUser.Password=admin


#############
# API Manager
#############

APIManager.GatewayType=None


##############
# Auth Manager
##############

# Server URL of the Authentication service
APIManager.AuthManager.ServerURL=https://localhost:9443/services/


#############
# API Gateway
#############

# Server URL of the API gateway.
APIManager.APIGateway.Environment.hybrid.ServerURL=https://localhost:9443/services/

# Endpoint URLs for the APIs hosted in this API gateway.
APIManager.APIGateway.Environment.hybrid.GatewayEndpoint=http://localhost:8280,https://localhost:8243

# Enable/Disable token caching at gateway node.
APIManager.APIGateway.EnableGatewayKeyCache=true

# Enable/Disable API resource caching at gateway node.
APIManager.APIGateway.EnableGatewayResourceCache=true


###################
# API Key Validator
###################

# Server URL of the API key manager
APIManager.APIKeyValidator.ServerURL=https://localhost:9443/services/

# Enable/Disable JWT caching.
APIManager.APIKeyValidator.EnableJWTCache=false

# Enable/Disable API key validation information caching at key-management server
APIManager.APIKeyValidator.EnableKeyMgtValidationInfoCache=false

# Configurations related to enable thrift support for key-management related communication.
#   If you want to switch back to Web Service Client, change the value of "KeyValidatorClientType" to "WSClient".
#   In a distributed environment;
#       -If you are at the Gateway node, you need to point "ThriftClientPort" value to the "ThriftServerPort" value given at KeyManager node.
#       -If you need to start two API Manager instances in the same machine, you need to give different ports to "ThriftServerPort" value in two nodes.
#       -ThriftServerHost - Allows to configure a hostname for the thrift server. It uses the carbon hostname by default.
#       -Gateway use this parameter to connect key validation thrift service.
APIManager.APIKeyValidator.KeyValidatorClientType=ThriftClient
APIManager.APIKeyValidator.ThriftClientPort=10397
APIManager.APIKeyValidator.ThriftClientConnectionTimeOut=10000
APIManager.APIKeyValidator.ThriftServerPort=10397
APIManager.APIKeyValidator.ThriftServerHost=localhost
APIManager.APIKeyValidator.EnableThriftServer=false

# Scope used for marking Application Tokens. If a token is generated with this scope, they will be treated as Application Access Tokens
APIManager.APIKeyValidator.ApplicationTokenScope=am_application_scope

# Specifies the implementation to be used for KeyValidationHandler. Steps for validating a token can be controlled by plugging in a custom KeyValidation Handler
APIManager.APIKeyValidator.KeyValidationHandlerClassName=org.wso2.carbon.apimgt.keymgt.handlers.DefaultKeyValidationHandler

# Remove UserName from JWT Token
APIManager.APIKeyValidator.RemoveUserNameFromJWTForApplicationToken=false

# Name of the token API
APIManager.APIKeyValidator.TokenEndPointName=/oauth2/token

# This the API URL for revoke API. When we revoke tokens revoke requests should go through this API deployed in API
# gateway. Then it will do cache invalidations related to revoked tokens. In distributed deployment we should configure
# this property in key manager node by pointing gateway https( /http, we recommend users to use 'https' endpoints for
# security purpose) url. Also please note that we should point gateway revoke service to key manager
APIManager.APIKeyValidator.RevokeAPIURL=https://localhost:8243/revoke

# Whether to encrypt tokens when storing in the Database Note: If changing this value to true, change the value of
# <TokenPersistenceProcessor> to org.wso2.carbon.identity.oauth.tokenprocessor.EncryptionDecryptionPersistenceProcessor
# in the identity.xml
APIManager.APIKeyValidator.EncryptPersistedTokens=false


#################
# Tier Management
#################

# Enable the providers to expose their APIs over the special 'Unlimited' tier which basically disables tier based
# throttling for the specified APIs.
APIManager.APIKeyValidator.TierManagement.EnableUnlimitedTier=true


############
# JWT Claims
############

# Name of the security context header to be added to the validated requests.
APIManager.APIConsumerAuthentication.SecurityContextHeader=X-JWT-Assertion

# Fully qualified name of the class that will retrieve additional user claims to be appended to the JWT. If not
# specified no claims will be appended.If user wants to add all user claims in the jwt token, he needs to enable this
# parameter. The DefaultClaimsRetriever class adds user claims from the default carbon user store.
APIManager.APIConsumerAuthentication.ClaimsRetrieverImplClass=org.wso2.carbon.apimgt.impl.token.DefaultClaimsRetriever

# The dialectURI under which the claimURIs that need to be appended to the JWT are defined. Not used with custom
# ClaimsRetriever implementations. The same value is used in the keys for appending the default properties to the JWT.
APIManager.APIConsumerAuthentication.ConsumerDialectURI=http://wso2.org/claims

# Signature algorithm. Accepts "SHA256withRSA" or "NONE". To disable signing explicitly specify "NONE".
APIManager.APIConsumerAuthentication.SignatureAlgorithm=NONE

# Enable/Disable JWT generation. Default is false.
APIManager.APIConsumerAuthentication.EnableTokenGeneration=false

# This parameter specifies which implementation should be used for generating the Token.
APIManager.APIConsumerAuthentication.TokenGeneratorImpl=org.wso2.carbon.apimgt.impl.token.JWTGenerator
